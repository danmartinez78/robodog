# ============================================================================
# ShadowHound Development Environment
# ============================================================================
#
# Configuration optimized for development and testing WITHOUT real robot.
# Copy to .env for local development.
#
# ============================================================================

# ----------------------------------------------------------------------------
# Core Configuration
# ----------------------------------------------------------------------------

# OpenAI API Key - REQUIRED
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-your-api-key-here

# Environment
ENVIRONMENT=development

# ----------------------------------------------------------------------------
# Robot Configuration - MOCK MODE
# ----------------------------------------------------------------------------

# Use mock robot (no hardware needed)
MOCK_ROBOT=true

# Robot IP (not used in mock mode, but keep for reference)
ROBOT_IP=192.168.1.103

# ----------------------------------------------------------------------------
# ROS2 Configuration
# ----------------------------------------------------------------------------

# Use unique domain ID to avoid conflicts with other ROS systems
ROS_DOMAIN_ID=42

# Use CycloneDDS for better performance
RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

# Verbose logging for development
RCUTILS_LOGGING_LEVEL=INFO

# ----------------------------------------------------------------------------
# Agent Configuration - DEVELOPMENT OPTIMIZED
# ----------------------------------------------------------------------------

# Backend: Use Ollama for 24x faster development (RECOMMENDED!)
# Options: "ollama" (fast, free) or "openai" (cloud fallback)
AGENT_BACKEND=ollama

# Ollama Settings (if using Ollama backend)
# Change to your gaming PC IP if using remote Ollama
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=llama3.1:70b

# OpenAI Settings (if using OpenAI backend as fallback)
OPENAI_MODEL=gpt-4o-mini
OPENAI_BASE_URL=https://api.openai.com/v1

# Use basic agent (faster for testing)
USE_PLANNING_AGENT=false

# Use local embeddings (FREE!)
USE_LOCAL_EMBEDDINGS=true

# More permissive RAG settings
RAG_QUERY_N=3
RAG_SIMILARITY_THRESHOLD=0.4

# ----------------------------------------------------------------------------
# Web Interface - ENABLED
# ----------------------------------------------------------------------------

# Enable web dashboard for easy testing
ENABLE_WEB_INTERFACE=true

# Standard port
WEB_PORT=8080

# Bind to localhost only (more secure for development)
WEB_HOST=0.0.0.0

# ----------------------------------------------------------------------------
# Logging - VERBOSE
# ----------------------------------------------------------------------------

# Enable debug logging
LOG_LEVEL=DEBUG
DIMOS_DEBUG=true

# Save all outputs
AGENT_OUTPUT_DIR=./dev_output

# ----------------------------------------------------------------------------
# Development Helpers
# ----------------------------------------------------------------------------

# Test mode (if your code checks this)
TEST_MODE=false

# Process all inputs (don't skip)
PROCESS_ALL_INPUTS=true

# ----------------------------------------------------------------------------
# Notes for Development
# ----------------------------------------------------------------------------
#
# This configuration:
#   ✓ Uses mock robot (no hardware needed)
#   ✓ Uses Ollama for 24x faster iteration (0.5s vs 12s!)
#   ✓ Uses local embeddings (free)
#   ✓ Enables web interface (easy testing)
#   ✓ Verbose logging (debugging)
#   ✓ Isolated ROS domain (no conflicts)
#
# Quick Start (with Ollama - RECOMMENDED):
#   1. Install Ollama: curl -fsSL https://ollama.com/install.sh | sh
#   2. Pull model: ollama pull llama3.1:70b
#   3. Copy to .env: cp .env.development .env
#   4. Launch: ros2 launch shadowhound_mission_agent mission_agent.launch.py
#   5. Open: http://localhost:8080
#   6. See: docs/OLLAMA_SETUP.md for gaming PC setup
#
# Quick Start (with OpenAI fallback):
#   1. Add your OPENAI_API_KEY above
#   2. Change AGENT_BACKEND=openai
#   3. Copy to .env: cp .env.development .env
#   4. Launch: ros2 launch shadowhound_mission_agent mission_agent.launch.py
#   5. Open: http://localhost:8080
#
# Cost Estimate (if using OpenAI):
#   - gpt-4o-mini: ~$0.15 per 1M input tokens
#   - Local embeddings: FREE
#   - Typical dev session: <$0.50/hour
#
# Performance (Ollama):
#   - Simple commands: 0.5-1s (vs 10-15s with OpenAI!)
#   - Multi-step: 1-3s (vs 20-30s with OpenAI!)
#   - Cost: FREE!
#
# ============================================================================
